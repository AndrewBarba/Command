name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to release'
        type: string

concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: read
  statuses: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: 'ubuntu-latest'
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[Release]')"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Get next version
        id: next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$NEXT_VERSION=$(git cliff --bumped-version)" >> "$GITHUB_OUTPUT"
      - name: Get changelog
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$CHANGELOG=$(git cliff --unreleased)" >> "$GITHUB_OUTPUT"
      - name: Update CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git cliff -o CHANGELOG.md
      - name: Commit changes
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_options: '--allow-empty'
          skip_dirty_check: true
          commit_message: "[Release] Command ${{ steps.next-version.outputs.NEXT_VERSION }}"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          repository: tuist/Command
          name: ${{ steps.next-version.outputs.NEXT_VERSION }}
          tag_name: ${{ steps.next-version.outputs.NEXT_VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          target_commitish: ${{ steps.auto-commit-action.outputs.commit_hash }}